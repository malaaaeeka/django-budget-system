# Generated by Django 5.1.2 on 2025-08-27 12:05

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Brand name (e.g., 'Nike', 'Coca-Cola')", max_length=200, unique=True)),
                ('daily_budget', models.DecimalField(decimal_places=2, help_text='Daily budget limit in dollars', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('monthly_budget', models.DecimalField(decimal_places=2, help_text='Monthly budget limit in dollars', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('timezone', models.CharField(choices=[('Asia/Karachi', 'Pakistan Standard Time'), ('Asia/Kolkata', 'India Standard Time'), ('Asia/Dhaka', 'Bangladesh Standard Time'), ('Asia/Kabul', 'Afghanistan Time'), ('Asia/Tehran', 'Iran Standard Time'), ('Asia/Dubai', 'UAE Standard Time'), ('Asia/Riyadh', 'Saudi Arabia Standard Time'), ('Asia/Shanghai', 'China Standard Time'), ('Asia/Hong_Kong', 'Hong Kong Time'), ('Asia/Tokyo', 'Japan Standard Time'), ('Asia/Seoul', 'South Korea Standard Time'), ('Asia/Singapore', 'Singapore Standard Time'), ('Asia/Bangkok', 'Thailand Standard Time'), ('Asia/Jakarta', 'Indonesia Western Time'), ('Asia/Manila', 'Philippines Standard Time'), ('Europe/London', 'United Kingdom Time'), ('Europe/Paris', 'Central European Time'), ('Europe/Berlin', 'Germany Time'), ('Europe/Rome', 'Italy Time'), ('Europe/Madrid', 'Spain Time'), ('Europe/Amsterdam', 'Netherlands Time'), ('Europe/Stockholm', 'Sweden Time'), ('Europe/Moscow', 'Moscow Standard Time'), ('Europe/Istanbul', 'Turkey Time'), ('America/New_York', 'Eastern Time (US)'), ('America/Chicago', 'Central Time (US)'), ('America/Denver', 'Mountain Time (US)'), ('America/Los_Angeles', 'Pacific Time (US)'), ('America/Toronto', 'Eastern Time (Canada)'), ('America/Vancouver', 'Pacific Time (Canada)'), ('Australia/Sydney', 'Australian Eastern Time'), ('Australia/Melbourne', 'Australian Eastern Time'), ('Australia/Perth', 'Australian Western Time'), ('Pacific/Auckland', 'New Zealand Standard Time'), ('Africa/Cairo', 'Egypt Standard Time'), ('Africa/Johannesburg', 'South Africa Standard Time'), ('Africa/Lagos', 'West Africa Time'), ('Africa/Nairobi', 'East Africa Time'), ('America/Sao_Paulo', 'Brazil Time'), ('America/Argentina/Buenos_Aires', 'Argentina Time'), ('America/Lima', 'Peru Time'), ('UTC', 'Coordinated Universal Time')], default='UTC', help_text="Brand's operating timezone for dayparting calculations", max_length=50)),
                ('is_active', models.BooleanField(default=True, help_text='Whether this brand is actively being managed')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'brand',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['is_active'], name='brand_is_acti_f5943a_idx'), models.Index(fields=['timezone'], name='brand_timezon_ad52ea_idx')],
            },
        ),
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="Campaign name (e.g., 'Nike Summer Sale')", max_length=200)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active - Currently running'), ('PAUSED_BUDGET', 'Paused - Budget exceeded'), ('PAUSED_DAYPART', 'Paused - Outside dayparting window'), ('INACTIVE', 'Inactive - Manually disabled')], default='INACTIVE', help_text='Current campaign status', max_length=20)),
                ('is_active', models.BooleanField(default=True, help_text='Manual on/off switch for the campaign')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(help_text='The brand this campaign belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='campaigns', to='budget_system.brand')),
            ],
            options={
                'db_table': 'campaign',
                'ordering': ['brand__name', 'name'],
            },
        ),
        migrations.CreateModel(
            name='DaypartingSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')], help_text='Day of the week (0=Monday, 6=Sunday)')),
                ('start_hour', models.IntegerField(help_text='Starting hour (0-23, e.g., 8 for 8 AM)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(23)])),
                ('end_hour', models.IntegerField(help_text='Ending hour (0-23, e.g., 22 for 10 PM)', validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(23)])),
                ('is_active', models.BooleanField(default=True, help_text='Whether this schedule is currently active')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('campaign', models.ForeignKey(help_text='Campaign this schedule applies to', on_delete=django.db.models.deletion.CASCADE, related_name='dayparting_schedules', to='budget_system.campaign')),
            ],
            options={
                'db_table': 'dayparting_schedule',
                'ordering': ['campaign', 'day_of_week', 'start_hour'],
            },
        ),
        migrations.CreateModel(
            name='SpendRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, help_text='Spend amount in dollars', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))])),
                ('spend_date', models.DateField(help_text='Date when the spend occurred')),
                ('spend_datetime', models.DateTimeField(help_text='Exact timestamp when spend was recorded')),
                ('record_type', models.CharField(choices=[('DAILY', 'Daily spend record'), ('MONTHLY', 'Monthly spend record')], default='DAILY', help_text='Type of spend record', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('brand', models.ForeignKey(help_text='Brand that incurred this spend', on_delete=django.db.models.deletion.CASCADE, related_name='spend_records', to='budget_system.brand')),
                ('campaign', models.ForeignKey(help_text='Campaign that generated this spend', on_delete=django.db.models.deletion.CASCADE, related_name='spend_records', to='budget_system.campaign')),
            ],
            options={
                'db_table': 'spend_record',
                'ordering': ['-spend_datetime'],
            },
        ),
        migrations.CreateModel(
            name='BudgetSummary',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(help_text='Date this summary applies to')),
                ('daily_spend', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total spend for this day', max_digits=12)),
                ('monthly_spend', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Total spend for this month up to this date', max_digits=12)),
                ('daily_remaining', models.DecimalField(decimal_places=2, help_text='Remaining daily budget (calculated field)', max_digits=12)),
                ('monthly_remaining', models.DecimalField(decimal_places=2, help_text='Remaining monthly budget (calculated field)', max_digits=12)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('brand', models.ForeignKey(help_text='Brand this summary belongs to', on_delete=django.db.models.deletion.CASCADE, related_name='budget_summaries', to='budget_system.brand')),
            ],
            options={
                'db_table': 'budget_summary',
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['brand', 'date'], name='budget_summ_brand_i_bba75e_idx'), models.Index(fields=['date'], name='budget_summ_date_d23d45_idx'), models.Index(fields=['brand', '-date'], name='budget_summ_brand_i_2469b7_idx')],
                'unique_together': {('brand', 'date')},
            },
        ),
        migrations.AddIndex(
            model_name='campaign',
            index=models.Index(fields=['status'], name='campaign_status_6dfdd9_idx'),
        ),
        migrations.AddIndex(
            model_name='campaign',
            index=models.Index(fields=['brand', 'status'], name='campaign_brand_i_daf81c_idx'),
        ),
        migrations.AddIndex(
            model_name='campaign',
            index=models.Index(fields=['is_active'], name='campaign_is_acti_69e1d8_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='campaign',
            unique_together={('brand', 'name')},
        ),
        migrations.AddIndex(
            model_name='daypartingschedule',
            index=models.Index(fields=['campaign', 'day_of_week'], name='dayparting__campaig_77e60a_idx'),
        ),
        migrations.AddIndex(
            model_name='daypartingschedule',
            index=models.Index(fields=['is_active'], name='dayparting__is_acti_a8bc43_idx'),
        ),
        migrations.AddIndex(
            model_name='spendrecord',
            index=models.Index(fields=['brand', 'spend_date'], name='spend_recor_brand_i_22feba_idx'),
        ),
        migrations.AddIndex(
            model_name='spendrecord',
            index=models.Index(fields=['campaign', 'spend_date'], name='spend_recor_campaig_8ab4fd_idx'),
        ),
        migrations.AddIndex(
            model_name='spendrecord',
            index=models.Index(fields=['spend_date'], name='spend_recor_spend_d_b5e11d_idx'),
        ),
        migrations.AddIndex(
            model_name='spendrecord',
            index=models.Index(fields=['-spend_datetime'], name='spend_recor_spend_d_57c966_idx'),
        ),
    ]
